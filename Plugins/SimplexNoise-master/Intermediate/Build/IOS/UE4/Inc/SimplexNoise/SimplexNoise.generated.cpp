// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/SimplexNoisePrivatePCH.h"
#include "SimplexNoise.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1SimplexNoise() {}
	void USimplexNoiseBPLibrary::StaticRegisterNativesUSimplexNoiseBPLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "setNoiseSeed",(Native)&USimplexNoiseBPLibrary::execsetNoiseSeed);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoise1D",(Native)&USimplexNoiseBPLibrary::execSimplexNoise1D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoise2D",(Native)&USimplexNoiseBPLibrary::execSimplexNoise2D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoise3D",(Native)&USimplexNoiseBPLibrary::execSimplexNoise3D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoise4D",(Native)&USimplexNoiseBPLibrary::execSimplexNoise4D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseInRange1D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseInRange1D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseInRange2D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseInRange2D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseInRange3D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseInRange3D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseInRange4D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseInRange4D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseScaled1D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseScaled1D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseScaled2D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseScaled2D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseScaled3D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseScaled3D);
		FNativeFunctionRegistrar::RegisterFunction(USimplexNoiseBPLibrary::StaticClass(), "SimplexNoiseScaled4D",(Native)&USimplexNoiseBPLibrary::execSimplexNoiseScaled4D);
	}
	IMPLEMENT_CLASS(USimplexNoiseBPLibrary, 4095461280);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_setNoiseSeed();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise1D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise2D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise3D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise4D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange1D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange2D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange3D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange4D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled1D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled2D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled3D();
	SIMPLEXNOISE_API class UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled4D();
	SIMPLEXNOISE_API class UClass* Z_Construct_UClass_USimplexNoiseBPLibrary_NoRegister();
	SIMPLEXNOISE_API class UClass* Z_Construct_UClass_USimplexNoiseBPLibrary();
	SIMPLEXNOISE_API class UPackage* Z_Construct_UPackage__Script_SimplexNoise();
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_setNoiseSeed()
	{
		struct SimplexNoiseBPLibrary_eventsetNoiseSeed_Parms
		{
			int32 newSeed;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setNoiseSeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(SimplexNoiseBPLibrary_eventsetNoiseSeed_Parms));
			UProperty* NewProp_newSeed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newSeed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(newSeed, SimplexNoiseBPLibrary_eventsetNoiseSeed_Parms), 0x0010000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
			MetaData->SetValue(NewProp_newSeed, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise1D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoise1D_Parms
		{
			float x;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoise1D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoise1D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoise1D_Parms), 0x0010000000000580);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoise1D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise2D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoise2D_Parms
		{
			float x;
			float y;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoise2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoise2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoise2D_Parms), 0x0010000000000580);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoise2D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoise2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise3D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms
		{
			float x;
			float y;
			float z;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoise3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms), 0x0010000000000580);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoise3D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise4D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms
		{
			float x;
			float y;
			float z;
			float w;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoise4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms), 0x0010000000000580);
			UProperty* NewProp_w = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("w"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(w, SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoise4D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange1D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms
		{
			float x;
			float rangeMin;
			float rangeMax;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseInRange1D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms), 0x0010000000000580);
			UProperty* NewProp_rangeMax = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMax"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMax, SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms), 0x0010000000000080);
			UProperty* NewProp_rangeMin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMin"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMin, SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseInRange1D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Return value in Range between two float numbers\nReturn Value is scaled by difference between rangeMin & rangeMax value"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange2D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms
		{
			float x;
			float y;
			float rangeMin;
			float rangeMax;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseInRange2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms), 0x0010000000000580);
			UProperty* NewProp_rangeMax = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMax"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMax, SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms), 0x0010000000000080);
			UProperty* NewProp_rangeMin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMin"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMin, SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseInRange2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange3D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms
		{
			float x;
			float y;
			float z;
			float rangeMin;
			float rangeMax;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseInRange3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000580);
			UProperty* NewProp_rangeMax = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMax"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMax, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000080);
			UProperty* NewProp_rangeMin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMin"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMin, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseInRange3D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange4D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms
		{
			float x;
			float y;
			float z;
			float w;
			float rangeMin;
			float rangeMax;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseInRange4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000580);
			UProperty* NewProp_rangeMax = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMax"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMax, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			UProperty* NewProp_rangeMin = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rangeMin"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(rangeMin, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			UProperty* NewProp_w = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("w"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(w, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseInRange4D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled1D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseScaled1D_Parms
		{
			float x;
			float s;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseScaled1D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseScaled1D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseScaled1D_Parms), 0x0010000000000580);
			UProperty* NewProp_s = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("s"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(s, SimplexNoiseBPLibrary_eventSimplexNoiseScaled1D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseScaled1D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Scaled by float value"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled2D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms
		{
			float x;
			float y;
			float s;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseScaled2D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms), 0x0010000000000580);
			UProperty* NewProp_s = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("s"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(s, SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseScaled2D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled3D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms
		{
			float x;
			float y;
			float z;
			float s;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseScaled3D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms), 0x0010000000000580);
			UProperty* NewProp_s = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("s"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(s, SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseScaled3D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled4D()
	{
		struct SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms
		{
			float x;
			float y;
			float z;
			float w;
			float s;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_USimplexNoiseBPLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimplexNoiseScaled4D"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000580);
			UProperty* NewProp_s = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("s"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(s, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000080);
			UProperty* NewProp_w = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("w"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(w, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, SimplexNoiseBPLibrary_eventSimplexNoiseScaled4D_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SimplexNoise"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_USimplexNoiseBPLibrary_NoRegister()
	{
		return USimplexNoiseBPLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_USimplexNoiseBPLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_SimplexNoise();
			OuterClass = USimplexNoiseBPLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_setNoiseSeed());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise1D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange1D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange4D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled1D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled2D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled3D());
				OuterClass->LinkChild(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled4D());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_setNoiseSeed(), "setNoiseSeed"); // 1868436
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise1D(), "SimplexNoise1D"); // 794629253
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise2D(), "SimplexNoise2D"); // 666906192
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise3D(), "SimplexNoise3D"); // 2895495461
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoise4D(), "SimplexNoise4D"); // 2693541653
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange1D(), "SimplexNoiseInRange1D"); // 3125168083
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange2D(), "SimplexNoiseInRange2D"); // 4176020942
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange3D(), "SimplexNoiseInRange3D"); // 3202278117
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseInRange4D(), "SimplexNoiseInRange4D"); // 417335276
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled1D(), "SimplexNoiseScaled1D"); // 613335397
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled2D(), "SimplexNoiseScaled2D"); // 1947905964
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled3D(), "SimplexNoiseScaled3D"); // 3471552067
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_USimplexNoiseBPLibrary_SimplexNoiseScaled4D(), "SimplexNoiseScaled4D"); // 2812581420
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SimplexNoiseBPLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/SimplexNoiseBPLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USimplexNoiseBPLibrary(Z_Construct_UClass_USimplexNoiseBPLibrary, &USimplexNoiseBPLibrary::StaticClass, TEXT("USimplexNoiseBPLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USimplexNoiseBPLibrary);
	UPackage* Z_Construct_UPackage__Script_SimplexNoise()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/SimplexNoise")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xF0289ADA;
			Guid.B = 0xAC29D67F;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
